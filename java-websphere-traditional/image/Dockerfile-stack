FROM {{.stack.finalimage}}

USER root

RUN dnf --disableplugin=subscription-manager install -y {{.stack.epelrpm}} \
  && dnf --disableplugin=subscription-manager install -y xmlstarlet \
  && dnf --disableplugin=subscription-manager update -y; dnf --disableplugin=subscription-manager clean all

RUN useradd --uid 1000 --gid 0 --shell /bin/bash --create-home java_user \
  && mkdir -p /mvn/repository \
  && mkdir -p /work/home \
  && mkdir -p /opt/java/openjdk \
  && mkdir -p /usr/share/maven \
  && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn \
  && chown -R java_user:0 /mvn /work/home /opt/java/openjdk /usr/share/maven

COPY ./LICENSE /licenses/
COPY --chown=java_user:0 ./project /project
COPY --chown=java_user:0 ./config /config

RUN chmod -R 777 /work /opt/IBM /etc/websphere

USER java_user

#
# Install openjdk
#
# This section based upon:
#   https://github.com/AdoptOpenJDK/openjdk-docker/blob/master/8/jdk/ubi/Dockerfile.openj9.releases.full
#
# Note: removed leading "set -eux; \" argument to RUN, restore if debugging this command
#

ENV JAVA_VERSION {{.stack.jdkversion}}

RUN ARCH="$(uname -m)"; \
    case "${ARCH}" in \
       ppc64el|ppc64le) \
         ESUM='{{.stack.jdkshappc64le}}'; \
         BINARY_URL='{{.stack.jdkdownload}}/{{.stack.jdkversion}}/OpenJDK8U-jdk_ppc64le_linux_openj9_{{.stack.jdksuffix}}.tar.gz'; \
         ;; \
       s390x) \
         ESUM='{{.stack.jdkshas390x}}'; \
         BINARY_URL='{{.stack.jdkdownload}}/{{.stack.jdkversion}}/OpenJDK8U-jdk_s390x_linux_openj9_{{.stack.jdksuffix}}.tar.gz'; \
         ;; \
       amd64|x86_64) \
         ESUM='{{.stack.jdkshax64}}'; \
         BINARY_URL='{{.stack.jdkdownload}}/{{.stack.jdkversion}}/OpenJDK8U-jdk_x64_linux_openj9_{{.stack.jdksuffix}}.tar.gz'; \
         ;; \
       *) \
         echo "Unsupported arch: ${ARCH}"; \
         exit 1; \
         ;; \
    esac; \
    curl -LfsSo /tmp/openjdk.tar.gz ${BINARY_URL}; \
    echo "${ESUM} */tmp/openjdk.tar.gz" | sha256sum -c -; \
    mkdir -p /opt/java/openjdk; \
    cd /opt/java/openjdk; \
    tar -xf /tmp/openjdk.tar.gz --strip-components=1; \
    rm -rf /tmp/openjdk.tar.gz;

ENV JAVA_HOME=/opt/java/openjdk \
    PATH="/opt/java/openjdk/bin:$PATH"
ENV JAVA_TOOL_OPTIONS="-XX:+IgnoreUnrecognizedVMOptions -XX:+UseContainerSupport -XX:+IdleTuningCompactOnIdle -XX:+IdleTuningGcOnIdle"

#
# Install maven
#
# This section based upon:
#   https://github.com/kabanero-io/collections/blob/master/docker/Dockerfile-maven
#

ARG MAVEN_VERSION={{.stack.mavenversion}}
ARG USER_HOME_DIR="/root"
ARG SHA={{.stack.mavensha}}
ARG BASE_URL={{.stack.mavendownload}}/${MAVEN_VERSION}/binaries/

RUN mkdir -p /usr/share/maven/ref \
  && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \
  && echo "${SHA}  /tmp/apache-maven.tar.gz" | sha512sum -c - \
  && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \
  && rm -f /tmp/apache-maven.tar.gz

ENV MAVEN_HOME /usr/share/maven
ENV MAVEN_CONFIG "$USER_HOME_DIR/.m2"

COPY ./mvn-stack-settings.xml /usr/share/maven/conf/settings.xml
COPY ./mvn-stack-settings.xml /project/mvn-stack-settings.xml

# Build utility for version range processing
# Install maven wrapper in /project
RUN /project/util/check_version build \
 && cd /project \
 && mvn --no-transfer-progress -B -Dmaven.repo.local=/mvn/repository -N io.takari:maven:wrapper -Dmaven=$(mvn help:evaluate -Dexpression=maven.version -q -DforceStdout)

WORKDIR /project/user-app

ENV APPSODY_USER_RUN_AS_LOCAL=true
ENV APPSODY_PROJECT_DIR="/project"

ENV APPSODY_MOUNTS=".:/project/user-app;~/.m2/repository:/mvn/repository"
ENV APPSODY_DEPS=/project/deps

ENV APPSODY_PREP="/project/java-twas-build.sh prep"

# ENV APPSODY_WATCH_DIR="/project/user-app/"
# ENV APPSODY_WATCH_IGNORE_DIR=/project/user-app/target
# ENV APPSODY_WATCH_REGEX="(^.*\.java$)|(^.*\.properties$)|(^.*\.yaml$)|(^.*\.html$)|(^.*\.sql$)|(^.*\.js$)"

ENV APPSODY_RUN="/project/java-twas-build.sh run"
ENV APPSODY_RUN_ON_CHANGE="/project/java-twas-build.sh recompile"
ENV APPSODY_RUN_KILL=false

ENV APPSODY_DEBUG="/project/java-twas-build.sh debug"
# ENV APPSODY_DEBUG_ON_CHANGE="/project/java-twas-build.sh recompile"
# ENV APPSODY_DEBUG_KILL=false
ENV APPSODY_DEBUG_PORT=0

ENV APPSODY_TEST="/project/java-twas-build.sh test"
# ENV APPSODY_TEST_ON_CHANGE=""
# ENV APPSODY_TEST_KILL=true

ENV PORT=9080

EXPOSE 9043
EXPOSE 9080
EXPOSE 9443
EXPOSE 7777
